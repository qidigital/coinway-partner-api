openapi: 3.0.3
info:
  title: Coinway Partner API
  description: |-
    Coinway is a peer-to-peer payment gateway, which means you or your merchant must have a digital (crypto) currency receiving wallet address. Coinway works with licensed and registered crypto exchanges should you wish to convert your digital and make introductions. Please note, you or your merchant would need to meet the compliance obligations of that or other crypto exchange. You may wish to use your very own self-custodial wallet, please contact our team to discuss the various options. One final note, Coinway or its developers, Qi Digital Limited do not store any funds nor are we in the flow of any funds.

  termsOfService: https://www.qidigital.com/company/terms-and-conditions/
  contact:
    email: dev@qidigital.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

servers:
  - url: https://demo.coinway.io/api
tags:
  - name: HealthCheck
  - name: Invoice
paths:
  /healthcheck:
    get:
      tags:
       - HealthCheck
      summary: Check the health of API
      description: Check the health of API
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
  /merchant:
    get:
      security:
        - BearerAuth: []
      tags:
        - Merchant
      summary: Retrieves all merchant information
      description: Retrieves all merchant information
      responses:
        '200':
          description: Get all merchants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchantall'
    post:
      security:
        - BearerAuth: []
      tags:
        - Merchant
      summary: Create a new merchant
      description: Creating a new merchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant'
            examples:
              New Merchant Example:
                value:
                  name: Merchant Name
                  email: contact@merchant.com
                  website : https:://merchantdomaoin.com
      responses:
        '200':
          description: Invoice successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
  /merchant/{merchantId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Merchant
      summary: View merchant details
      description: Retrieves merchant deaitls.
      parameters:
        - name: merchantId
          in: path
          description:  Unique Merchant Id
          required: true
          schema:
            type: string
            example: m_65e36f37481a6
      responses:
        '200':
          description: Merchant details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
  /merchant/{merchantId}/wallet:
    get:
      security:
        - BearerAuth: []
      tags:
        - Merchant Wallets
      parameters:
        - name: merchantId
          in: path
          description:  Unique merchat id
          required: true
          schema:
            type: string
            example: m_65e36f37481a6
      summary: Retrieves wallet information of a merchant
      description: Retrieves invoice information 
      responses:
        '200':
          description: Get all invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceall'
    post:
      security:
        - BearerAuth: []
      tags:
        - Merchant Wallets
      parameters:
        - name: merchantId
          in: path
          description:  Unique merchat id
          required: true
          schema:
            type: string
            example: m_65e36f37481a6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wallet'
      summary: Retrieves wallet information of a merchant
      description: Retrieves invoice information 
      responses:
        '200':
          description: Get all invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceall'
  /invoice:
    get:
      security:
        - BearerAuth: []
      tags:
        - Invoice
      summary: Retrieves invoice information
      description: Retrieves invoice information 
      responses:
        '200':
          description: Get all invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceall'
    post:
      security:
        - BearerAuth: []
      tags:
        - Invoice
      summary: Create a new invoice or payment request
      description: Creating an invoice or payment request with a base fiat currency, i.e. USD
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoice'
            examples:
              For New Customer:
                value:
                  currency: USD
                  customer:
                    name : John Doe
                    email : john.doe@email.com
                  items:
                    - description: My Item 1
                      amount : 22
                    - description: My Item 2
                      amount : 22
              Existing Customer:
                value:
                  currency: USD
                  customer:
                    id : c_65da6de9813e9
                  items:
                    - description: My Item 1
                      amount : 22
                    - description: My Item 2
                      amount : 22
              Guest Customer:
                value:
                  currency: USD
                  items:
                    - description: My Item 1
                      amount : 22
      responses:
        '200':
          description: Invoice successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'
  /invoice/{invoiceId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Invoice
      summary: Invoice details
      description: Retrieves invoice or payment request information, including ID.
      parameters:
        - name: invoiceId
          in: path
          description:  Unique Invoice Id
          required: true
          schema:
            type: string
            example: p_65e36f37481a6
      responses:
        '200':
          description: Invoice ID and details successfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'
  /report/customer:
    get:
      security:
        - BearerAuth: []
      tags:
        - Report
      summary: Customer Report
      description: Consolidated merchant-based customer report
      responses:
        '200':
          description: Successful response with merchant data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    merchant_id:
                      type: string
                      example: "m_d834h8hd"
                      description: Unique identifier for the merchant.
                    merchant_name:
                      type: string
                      example: "Madassery"
                      description: Name of the merchant.
                    total_customer:
                      type: integer
                      example: 1
                      description: Total number of customers associated with the merchant
  /report/invoice:
    get:
      security:
        - BearerAuth: []
      tags:
        - Report
      summary: Invoice Report
      description: Consolidated merchant-based invoice report
      responses:
        '200':
          description: Successful response with merchant data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    merchant_id:
                      type: string
                      example: "m_d834h8hd"
                      description: Unique identifier for the merchant.
                    merchant_name:
                      type: string
                      example: "Merchant name"
                      description: Name of the merchant.
                    total_amount:
                      type: string
                      format: decimal
                      example: "100.00"
                      description: Total transaction amount for the merchant.
                    total_amount_success:
                      type: string
                      format: decimal
                      example: "0.00"
                      description: Total successful transaction amount for the merchant.
components:
  schemas:
    Health:
      type: object
      properties:
        status:
          type: string
          example: ok
    item:
      type : object
      properties:
        description:
          type : string
          example: Item Name
        amount:
          type: number
          example : 10.4
    customer: 
      type: object
      properties:
        name: 
          type: string
          example: John
        email: 
          type: string
          example : john@email.com
    merchant:
      type: object
      properties:
        name:
          type: string
          example : merchant 1
        email:
          type: string
          example: contact@merchantdomain.com
        website:
          type: string
          example : https://merchantdomain.com
    wallet:
      type: object
      properties:
        crypto:
          type: string
          example : BTC
        wallet_address:
          type: string
          example: bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh
    invoice:
      type: object
      required: 
        - currency
        - customer
        - items
      properties:
        currency: 
          type: string
          example: USD
        customer: 
          $ref: '#/components/schemas/customer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/item'
        success_url: # Optional property
          type : string
          example: https://yourdomain.com/payment/success
        cancel_url:
          type: string
          example: https://yourdomain.com/payment/cancel
    walletall:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        data:
          type: array
          items: 
            $ref: '#/components/schemas/wallet'
        first_page_url:
          type: string
          format: url
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        last_page_url:
          type: string
          format: url
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        next_page_url:
          type: string
          example: null
        path:
          type: string
          format: url
        per_page:
          type: integer
          example: 15
        prev_page_url:
          type: string
          example: null
        to:
          type: integer
          example: 2
        total:
          type: integer
          example: 2
    merchantall:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        data:
          type: array
          items: 
            $ref: '#/components/schemas/merchant'
        first_page_url:
          type: string
          format: url
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        last_page_url:
          type: string
          format: url
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        next_page_url:
          type: string
          example: null
        path:
          type: string
          format: url
        per_page:
          type: integer
          example: 15
        prev_page_url:
          type: string
          example: null
        to:
          type: integer
          example: 2
        total:
          type: integer
          example: 2
    invoiceall:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        data:
          type: array
          items: 
            $ref: '#/components/schemas/invoice'
        first_page_url:
          type: string
          format: url
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        last_page_url:
          type: string
          format: url
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        next_page_url:
          type: string
          example: null
        path:
          type: string
          format: url
        per_page:
          type: integer
          example: 15
        prev_page_url:
          type: string
          example: null
        to:
          type: integer
          example: 2
        total:
          type: integer
          example: 2
    links:
      type: object
      properties:
        url:
          type: string
          format: url
        label:
          type: string
          example: "&laquo; Previous"
        active:
          type: boolean
          example: false
  securitySchemes:
    BearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
